{"version":3,"sources":["db.js"],"names":["isConnected","connectToDatabase","console","log","mongoose","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","error","Error"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAIA,WAAW,GAAG,KAAlB,C,CAAyB;;AAEzB;;;;AAGO,SAAeC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,eACCD,WADD;AAAA;AAAA;AAAA;;AAECE,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAFD;;AAAA;AAAA;AAAA;AAAA,0CAQOC,qBAASC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAA7B,EAA0C;AAC5CC,YAAAA,eAAe,EAAE,IAD2B;AAE5CC,YAAAA,kBAAkB,EAAE;AAFwB,WAA1C,CARP;;AAAA;AAaCV,UAAAA,WAAW,GAAG,IAAd,CAbD,CAaqB;;AACpBE,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAdD;AAAA;;AAAA;AAAA;AAAA;AAgBCD,UAAAA,OAAO,CAACS,KAAR,CAAc,8BAAd;AAhBD,gBAiBO,IAAIC,KAAJ,CAAU,+BAAV,CAjBP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nlet isConnected = false; // Track the connection state\r\n\r\n/**\r\n * Connect to MongoDB\r\n */\r\nexport async function connectToDatabase() {\r\n    if (isConnected) {\r\n        console.log(\"Already connected to MongoDB\");\r\n        return; // If already connected, return early\r\n    }\r\n\r\n    try {\r\n        // Connect to MongoDB using the URI in environment variables\r\n        await mongoose.connect(process.env.MONGODB_URI, {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true,\r\n        });\r\n\r\n        isConnected = true; // Set the connection state to true after successful connection\r\n        console.log(\"MongoDB connected\");\r\n    } catch (error) {\r\n        console.error(\"Error connecting to MongoDB:\", error);\r\n        throw new Error('Failed to connect to database');\r\n    }\r\n}\r\n"],"file":"db.dev.js"}