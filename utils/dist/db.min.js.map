{"version":3,"sources":["db.js"],"names":["_mongoose","_interopRequireDefault","require","isConnected","connectToDatabase","regeneratorRuntime","async","_context","prev","next","console","log","abrupt","awrap","mongoose","connect","process","env","MONGODB_URI","useNewUrlParser","t0","error","Error","stop"],"mappings":"gHAAA,IAAAA,UAAAC,uBAAAC,QAAA,qFAEA,IAAIC,aAAc,EAFlB,SAAAC,oBAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,GAQQN,YARR,OASQO,QAAQC,IAAI,gCATpBJ,EAAAK,OAAA,UAAAL,EAAAE,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAQ,MAecC,UAAAA,QAASC,QAAQC,QAAQC,IAAIC,YAAa,CAC5CC,iBAAiB,EATPf,oBAAf,KAPP,KAAA,EAOOD,aAAA,EAAAO,QAAAC,IAAA,qBAPPJ,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,MAAAF,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,MAAA,GAOOG,QAAAW,MAAA,+BAAAd,EAAAa,IAAA,IAAAE,MAAA,iCAPP,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAgB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"db.min.js","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nlet isConnected = false; // Track the connection state\r\n\r\n/**\r\n * Connect to MongoDB\r\n */\r\nexport async function connectToDatabase() {\r\n    if (isConnected) {\r\n        console.log(\"Already connected to MongoDB\");\r\n        return; // If already connected, return early\r\n    }\r\n\r\n    try {\r\n        // Connect to MongoDB using the URI in environment variables\r\n        await mongoose.connect(process.env.MONGODB_URI, {\r\n            useNewUrlParser: true,\r\n            useUnifiedTopology: true,\r\n        });\r\n\r\n        isConnected = true; // Set the connection state to true after successful connection\r\n        console.log(\"MongoDB connected\");\r\n    } catch (error) {\r\n        console.error(\"Error connecting to MongoDB:\", error);\r\n        throw new Error('Failed to connect to database');\r\n    }\r\n}\r\n"]}