{"version":3,"sources":["posts.js"],"names":["postSchema","mongoose","Schema","message","String","timestamp","Date","username","sessionId","Post","model","handler","req","res","method","find","sort","posts","status","json","error"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACnCC,EAAAA,OAAO,EAAEC,MAD0B;AAEnCC,EAAAA,SAAS,EAAEC,IAFwB;AAGnCC,EAAAA,QAAQ,EAAEH,MAHyB;AAInCI,EAAAA,SAAS,EAAEJ;AAJwB,CAApB,CAAnB;;AAMA,IAAMK,IAAI,GAAGR,qBAASS,KAAT,CAAe,MAAf,EAAuBV,UAAvB,CAAb;;AAEe,SAAeW,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACPD,GAAG,CAACE,MAAJ,KAAe,KADR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0CAGG,4BAHH;;AAAA;AAAA;AAAA,0CAIiBL,IAAI,CAACM,IAAL,GAAYC,IAAZ,CAAiB;AAAEX,YAAAA,SAAS,EAAE,CAAC;AAAd,WAAjB,CAJjB;;AAAA;AAIGY,UAAAA,KAJH;AAKHJ,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB;AALG;AAAA;;AAAA;AAAA;AAAA;AAOHJ,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEhB,YAAAA,OAAO,EAAE,wBAAX;AAAqCiB,YAAAA,KAAK;AAA1C,WAArB;;AAPG;AAAA;AAAA;;AAAA;AAUPP,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEhB,YAAAA,OAAO,EAAE;AAAX,WAArB;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import mongoose from 'mongoose';\r\nimport { connectToDatabase } from '../../utils/db';\r\n\r\nconst postSchema = new mongoose.Schema({\r\n    message: String,\r\n    timestamp: Date,\r\n    username: String,\r\n    sessionId: String,\r\n});\r\nconst Post = mongoose.model('Post', postSchema);\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method === 'GET') {\r\n        try {\r\n            await connectToDatabase();\r\n            const posts = await Post.find().sort({ timestamp: -1 });\r\n            res.status(200).json(posts);\r\n        } catch (error) {\r\n            res.status(500).json({ message: 'Error retrieving posts', error });\r\n        }\r\n    } else {\r\n        res.status(405).json({ message: 'Method Not Allowed' });\r\n    }\r\n}\r\n"],"file":"posts.dev.js"}